// Code generated by mockery v2.46.2. DO NOT EDIT.

package manager

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockAgent is an autogenerated mock type for the Agent type
type MockAgent struct {
	mock.Mock
}

type MockAgent_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAgent) EXPECT() *MockAgent_Expecter {
	return &MockAgent_Expecter{mock: &_m.Mock}
}

// JSON provides a mock function with given fields: ctx, data, format
func (_m *MockAgent) JSON(ctx context.Context, data []string, format string) (string, error) {
	ret := _m.Called(ctx, data, format)

	if len(ret) == 0 {
		panic("no return value specified for JSON")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []string, string) (string, error)); ok {
		return rf(ctx, data, format)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []string, string) string); ok {
		r0 = rf(ctx, data, format)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, []string, string) error); ok {
		r1 = rf(ctx, data, format)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAgent_JSON_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'JSON'
type MockAgent_JSON_Call struct {
	*mock.Call
}

// JSON is a helper method to define mock.On call
//   - ctx context.Context
//   - data []string
//   - format string
func (_e *MockAgent_Expecter) JSON(ctx interface{}, data interface{}, format interface{}) *MockAgent_JSON_Call {
	return &MockAgent_JSON_Call{Call: _e.mock.On("JSON", ctx, data, format)}
}

func (_c *MockAgent_JSON_Call) Run(run func(ctx context.Context, data []string, format string)) *MockAgent_JSON_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].([]string), args[2].(string))
	})
	return _c
}

func (_c *MockAgent_JSON_Call) Return(_a0 string, _a1 error) *MockAgent_JSON_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAgent_JSON_Call) RunAndReturn(run func(context.Context, []string, string) (string, error)) *MockAgent_JSON_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAgent creates a new instance of MockAgent. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAgent(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAgent {
	mock := &MockAgent{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
